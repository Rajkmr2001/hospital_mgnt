# Hospital Admin Panel: Login & Authentication Workflow

---

## 1. admin/login.html
- **Language:** HTML, JavaScript
- **Role:** Admin login form UI
- **Backend Auth:** Submits credentials to `php/login.php` via POST (AJAX)
- **Password Handling:** Password entered in form, sent to backend
- **Session/Token:** None in frontend; relies on backend

---

## 2. admin/php/login.php
- **Language:** PHP
- **Role:** Backend authentication handler for admin login
- **Backend Auth:** Checks credentials against `admins` table in database
- **Password Handling:** Uses `password_verify()` to check hashed password
- **Session/Token:** Sets PHP session variables (`admin_id`, `admin_username`) on successful login

---

## 3. admin/php/auth_check.php
- **Language:** PHP
- **Role:** Session authentication middleware
- **Backend Auth:** Checks for valid session variables
- **Password Handling:** Not involved
- **Session/Token:** Requires session variables to access dashboard

---

## 4. admin/dashboard_auth.php
- **Language:** PHP
- **Role:** Protected dashboard loader
- **Backend Auth:** Includes `auth_check.php` to verify session
- **Password Handling:** Not involved
- **Session/Token:** Requires session variables

---

## 5. admin/php/logout.php
- **Language:** PHP
- **Role:** Logout handler
- **Backend Auth:** Destroys session
- **Password Handling:** Not involved
- **Session/Token:** Unsets session, destroys session, redirects to login

---

## 6. admin/dashboard.html
- **Language:** HTML, JavaScript
- **Role:** Dashboard UI (loaded after authentication)
- **Backend Auth:** Only accessible via `dashboard_auth.php` (protected)
- **Password Handling:** Not involved
- **Session/Token:** Not directly, but loaded only if session is valid

---

## 7. db/config.php
- **Language:** PHP
- **Role:** Database connection config
- **Backend Auth:** Used by backend scripts for DB access
- **Password Handling:** Not involved
- **Session/Token:** Not involved

---

## 8. admin-portal.html
- **Language:** HTML
- **Role:** Entry point with link to admin login and dashboard
- **Backend Auth:** Not involved
- **Password Handling:** Not involved
- **Session/Token:** Not involved

---

## Password Storage
- **Passwords are hashed** in the database using `password_hash()` and verified with `password_verify()`.

## Session/Token Security
- **Session-based authentication** is used for admin panel security. No tokens or cookies beyond PHP session.

## Summary Table
| File                          | Language      | Role                        | Backend Auth | Password Hashed | Session/Token |
|-------------------------------|--------------|-----------------------------|--------------|-----------------|---------------|
| admin/login.html              | HTML, JS     | Login Form                  | Yes          | No              | No            |
| admin/php/login.php           | PHP          | Auth Handler                | Yes          | Yes             | Yes           |
| admin/php/auth_check.php      | PHP          | Session Check               | Yes          | N/A             | Yes           |
| admin/dashboard_auth.php      | PHP          | Dashboard Loader            | Yes          | N/A             | Yes           |
| admin/php/logout.php          | PHP          | Logout                      | Yes          | N/A             | Yes           |
| admin/dashboard.html          | HTML, JS     | Dashboard UI                | Indirect     | N/A             | Indirect      |
| db/config.php                 | PHP          | DB Config                   | Indirect     | N/A             | N/A           |
| admin-portal.html             | HTML         | Entry Point                 | No           | N/A             | N/A           |

---

**All admin authentication is session-based and passwords are securely hashed.**
---

# Security Analysis of Additional Files

## login.html (root)
- **Language:** HTML, JS
- **Role:** Patient login form (not admin)
- **Backend Auth:** Submits credentials to backend PHP (likely patient_login.php)
- **Password Handling:** Password sent via POST; security depends on backend
- **Session/Token:** Not handled in frontend
- **Security:** Frontend alone is not secure; must rely on backend to hash passwords and use sessions. If backend uses password_hash/password_verify and session, it is secure. If not, it is vulnerable.

## manage_patients.html
- **Language:** HTML, JS
- **Role:** Admin UI for managing patients
- **Backend Auth:** Relies on backend PHP for CRUD operations
- **Password Handling:** No direct password handling; patient data only
- **Session/Token:** Security depends on backend session checks
- **Security:** Secure if backend PHP checks session and validates requests. Frontend alone is not secure.

## manage_feedback.html
- **Language:** HTML, JS
- **Role:** Admin UI for managing feedback
- **Backend Auth:** Relies on backend PHP for feedback operations
- **Password Handling:** Not involved
- **Session/Token:** Security depends on backend session checks
- **Security:** Secure if backend PHP checks session and validates requests. Frontend alone is not secure.

## manage_messages.html
- **Language:** HTML, JS
- **Role:** Admin UI for managing messages
- **Backend Auth:** Relies on backend PHP for message operations
- **Password Handling:** Not involved
- **Session/Token:** Security depends on backend session checks
- **Security:** Secure if backend PHP checks session and validates requests. Frontend alone is not secure.

## manage_registered_persons.html
- **Language:** HTML, JS
- **Role:** Admin UI for managing registered users
- **Backend Auth:** Relies on backend PHP for user management
- **Password Handling:** Passwords shown as fields, but actual security depends on backend
- **Session/Token:** Security depends on backend session checks
- **Security:** Secure if backend PHP checks session and hashes passwords. Frontend alone is not secure.

## user_visits.html
- **Language:** HTML, JS
- **Role:** Admin UI for analytics
- **Backend Auth:** Relies on backend PHP for analytics data
- **Password Handling:** Not involved
- **Session/Token:** Security depends on backend session checks
- **Security:** Secure if backend PHP checks session and validates requests. Frontend alone is not secure.

---

# File Structure of hospital-admin-panel

```
hospital-admin-panel/
├── admin/
│   ├── login.html
│   ├── dashboard.html
│   ├── dashboard_auth.php
│   ├── manage_patients.html
│   ├── manage_feedback.html
│   ├── manage_messages.html
│   ├── manage_registered_persons.html
│   ├── user_visits.html
│   ├── php/
│   │   ├── login.php
│   │   ├── auth_check.php
│   │   ├── logout.php
│   │   ├── add_patient.php
│   │   ├── update_patient.php
│   │   ├── get_patients.php
│   │   ├── delete_patient.php
│   │   ├── get_feedback.php
│   │   ├── submit_feedback.php
│   │   ├── like_feedback.php
│   │   ├── get_messages.php
│   │   ├── delete_message.php
│   │   ├── get_total_patients.php
│   │   ├── get_total_registered_persons.php
│   │   ├── get_total_feedback.php
│   │   ├── get_total_messages.php
│   │   ├── get_user_visits_stats.php
│   │   ├── ...
│   ├── styledb.css
│   └── ...
├── db/
│   ├── config.php
│   ├── create_patient_data_table.sql
│   └── ...
├── setup_patient_management.php
├── test_patient_table.php
├── admin-portal.html
└── ...
```
